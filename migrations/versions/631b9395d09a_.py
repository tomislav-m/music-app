"""empty message

Revision ID: 631b9395d09a
Revises: 
Create Date: 2020-08-25 23:03:50.641558

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '631b9395d09a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('mb_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('bio', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('mb_id')
    )
    op.create_table('genre',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('album',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('artist_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('mb_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('mb_id')
    )
    op.create_table('artist_genre',
    sa.Column('artist_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('genre_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('artist_id', 'genre_id')
    )
    op.create_table('similar_artist',
    sa.Column('artist1_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('artist2_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('match', sa.NUMERIC(), nullable=True),
    sa.ForeignKeyConstraint(['artist1_id'], ['artist.id'], ),
    sa.ForeignKeyConstraint(['artist2_id'], ['artist.id'], ),
    sa.PrimaryKeyConstraint('artist1_id', 'artist2_id')
    )
    op.create_table('album_genre',
    sa.Column('album_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('genre_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('album_id', 'genre_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('album_genre')
    op.drop_table('similar_artist')
    op.drop_table('artist_genre')
    op.drop_table('album')
    op.drop_table('genre')
    op.drop_table('artist')
    # ### end Alembic commands ###
